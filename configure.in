dnl Process this file with autoconf to produce a configure script.

AC_INIT(src)
AC_PREREQ(2.53)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(prelude-lml, 0.8.1)
AM_CONFIG_HEADER(config.h)
AM_DISABLE_STATIC

AM_MAINTAINER_MODE

AM_PROG_LIBTOOL

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_C_INLINE
AC_C_BIGENDIAN

AM_PROG_LEX
AC_PROG_YACC

AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

if test "x$prefix" = "xNONE"; then
	prefix="/usr/local"
fi

if test "x$localstatedir" = "x\${prefix}/var"; then
	localstatedir="$prefix/var"
fi

if test "x$sysconfdir" = "x\${prefix}/etc"; then
    sysconfdir="$prefix/etc"
fi



dnl **************************************************
dnl * Check for libprelude                           *
dnl **************************************************

AC_PATH_GENERIC(libprelude, 0.8.0, ,
  AC_MSG_ERROR(Cannot find libprelude: Is libprelude-config in the path?) )



dnl **************************************************
dnl * Check for PCRE                                 *
dnl **************************************************

AC_PATH_GENERIC2(pcre, 3.0, ,
  AC_MSG_ERROR(Cannot find pcre: Is pcre-config in the path?) )



dnl **************************************************
dnl * Enable / Disable gprof profiling.              *
dnl **************************************************

AC_ARG_ENABLE(profiling, [  --enable-profiling Enable Gprof profiling - with thread workaround [default=no]], \
	      enable_profiling=yes, enable_profiling=no)

if test x$enable_profiling = xyes ; then
	CFLAGS="$CFLAGS -O0 -pg"
	
	dnl *** for gcc3 ***
	
	cat > conftest.c << EOF 

	int main(void)
	{
		exit(0);
	}
EOF

	AC_MSG_CHECKING(whether compiler support -fprofile-arcs)

        ${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.c $LIBS >/dev/null 2>&1
	if test -x conftest ; then
        	CFLAGS="$CFLAGS -fprofile-arcs";
		AC_MSG_RESULT(yes);
		rm -f conftest;
	else
		AC_MSG_RESULT(no);
	fi
fi



dnl **************************************************
dnl * Check for Gtkdoc.                              *
dnl **************************************************

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)
AM_CONDITIONAL(HAVE_GTK_DOC, test -n $GTKDOC)
AC_SUBST(HAVE_GTK_DOC)

AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=no]], enable_gtk_doc="$enableval", enable_gtk_doc=no)
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)




dnl **************************************************
dnl * Html dir ?                                     *
dnl ************************************************** 
if test "x$with_html_dir" = "x" ; then
	HTML_DIR='${datadir}/doc/prelude-lml/html'
else
	HTML_DIR=$with_html_dir
fi
AC_SUBST(HTML_DIR)



dnl **************************************************
dnl * Check if FAM detect writev() issued changes    *
dnl **************************************************


cat > conftest.c << EOF

#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <sys/uio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <errno.h>
#include <fam.h>

#define FAM_FILENAME "testfam.tmp"
#define FAM_STRING "test string\n"



static int get_expected_event(FAMConnection *fc, int eventno)
{
	int ret;
	fd_set fds;
	FAMEvent event;
	struct timeval tv;

	FD_ZERO(&fds);
	FD_SET(fc->fd, &fds);

	tv.tv_sec = 1;
	tv.tv_usec = 0;

	if ( ! FAMPending(fc) ) {
		ret = select(fc->fd + 1, &fds, NULL, NULL, &tv);
		if ( ret <= 0 )
			return -1;
	}

	/*
	 * Wait for the notification started event.
	 */
	ret = FAMNextEvent(fc, &event);
        if ( ret < 0 || event.code != eventno ) 
                return -1;

	return 0;
}



int main(void)
{
	int ret, fd;
	FAMRequest fr;
	char buf[[1024]];
	FAMConnection fc;
	struct iovec iov[[1]];

        getcwd(buf, sizeof(buf));
        snprintf(buf + strlen(buf), sizeof(buf) - strlen(buf), "/%s", FAM_FILENAME);
        
	fd = open(buf, O_CREAT|O_WRONLY, S_IRUSR|S_IWUSR);
	if ( fd < 0 ) {
		fprintf(stderr, "error opening %s for writing: %s.\n", buf, strerror(errno));
		return -1;
	}

	ret = FAMOpen(&fc);
	if ( ret < 0 ) {
		fprintf(stderr, "error initializing FAM: %s.\n", FamErrlist[[FAMErrno]]);
		return -1;
	}

	ret = FAMMonitorFile(&fc, buf, &fr, NULL);
	if ( ret < 0 ) {
		fprintf(stderr, "error creating FAM monitor for %s: %s.\n", buf, FamErrlist[[FAMErrno]]);
		return -1;
	}

	ret = get_expected_event(&fc, FAMExists);
	if ( ret < 0 )
		return -1;

	ret = get_expected_event(&fc, FAMEndExist);
	if ( ret < 0 )
		return -1;

	iov[[0]].iov_len = sizeof(FAM_STRING);
	iov[[0]].iov_base = FAM_STRING;
        
	/* ret = write(fd, FAM_STRING, sizeof(FAM_STRING)); */

	ret = writev(fd, iov, 1);
	if ( ret != sizeof(FAM_STRING) ) {
		fprintf(stderr, "error writing test string to %s: %s.\n", buf, strerror(errno));
		return -1;
	}
	
	ret = get_expected_event(&fc, FAMChanged);
	if ( ret < 0 )
		return -1;

	printf("Got expected FAMChanged event.\n");

        return 0;
}
EOF

AC_MSG_CHECKING(whether FAM detect writev change)

${CC-cc} -o conftest $CFLAGS -Wall $CPPFLAGS $LDFLAGS conftest.c -lfam
if test ! -x conftest; then
	AC_MSG_RESULT(couldn't compile FAM test program)
	enable_fam=no;
else
	./conftest > conftest.out

	if test -s conftest.out; then
		rm -f conftest.out

		AC_MSG_RESULT(FAM working)
		AC_DEFINE(HAVE_FAM,, compiled in FAM support)
		enable_fam=yes
        else
		AC_MSG_RESULT(FAM not working)
		enable_fam=no
        fi
fi

rm -f conftest conftest.out


dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday select socket strdup strerror strstr)

configdir=$sysconfdir/prelude-lml
prelude_conf=$configdir/prelude-lml.conf
regex_conf=$configdir/plugins.rules

plugindir=$libdir/prelude-lml
log_plugin_dir=$plugindir/

AC_DEFINE_UNQUOTED(PRELUDE_CONF, "$prelude_conf", Path to the LML configuration file)

defined="$defined $LIBPRELUDE_CFLAGS $PCRE_CFLAGS"

AC_SUBST(defined)
AC_SUBST(configdir)
AC_SUBST(localstatedir)
AC_SUBST(prelude_conf)
AC_SUBST(regex_conf)
AC_SUBST(log_plugin_dir)
AC_SUBST(LIBWRAP_LIBS)

if test x$enable_profiling = xno; then
	CFLAGS="$CFLAGS -O2 -fomit-frame-pointer"
fi

CFLAGS="$CFLAGS -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations \
-Wbad-function-cast -Wcast-qual -Wcast-align -Wnested-externs -Wunused"


AC_SUBST(CFLAGS)

AC_OUTPUT([

prelude-lml.conf
plugins.rules

Makefile 

src/Makefile 
src/include/Makefile

plugins/Makefile

plugins/debug/Makefile
plugins/pax/Makefile
plugins/simple/Makefile
plugins/simple/ruleset/Makefile

])

echo
echo "*** Dumping configuration ***"
echo "    - Enable FAM support     : $enable_fam"
echo "    - Enable profiling       : $enable_profiling"
echo "    - Generate documentation : $enable_gtk_doc"
